{"version":3,"sources":["components/About/Education.js","components/About/Experience.js","components/About/Intro.js","components/About/Skills.js","components/About/index.js","components/Contact.js","components/NavBar.js","components/Projects.js","App.js","AppRouter.js","serviceWorker.js","index.js"],"names":["Education","renderEducation","src","href","university","degree","time","classes","props","Card","variant","className","card","logo","alt","info","target","rel","link","this","education","process","React","Component","withStyles","marginBottom","display","maxWidth","minWidth","height","borderRadius","margin","flexDirection","color","Experience","renderExperience","company","title","experience","Intro","renderIcon","icon","root","picture","content","name","links","fontSize","flexWrap","width","marginRight","justifyContent","minHeight","marginTop","Skills","category","About","Helmet","Contact","state","captchaLoaded","captchaVerified","nameError","emailError","messageError","captchaError","submitting","status","handleSubmit","event","preventDefault","form","data","FormData","get","email","message","test","setState","xhr","XMLHttpRequest","open","method","action","setRequestHeader","onreadystatechange","readyState","DONE","reset","captcha","send","loadReCaptcha","noValidate","autoComplete","onSubmit","privateInfo","form_endpoint","inputs","TextField","fullWidth","InputLabelProps","shrink","label","autoFocus","error","helperText","onChange","multiline","rows","ref","element","render","sitekey","captcha_sitekey","onloadCallback","verifyCallback","expiredCallback","submit","CircularProgress","Button","type","submitError","alignItems","NarBar","history","page","location","pathname","slice","AppBar","appBar","position","Toolbar","Tabs","tabs","value","push","Tab","withRouter","boxShadow","Projects","renderProject","project","description","Grid","item","xs","container","CardActionArea","CardMedia","component","image","CardContent","spacing","textDecoration","fontFamily","fontWeight","App","NavBar","exact","path","padding","AppRouter","basename","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.225301e4.chunk.js","sourcesContent":["import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = {\n  education: {\n    \"& > *\": {\n      marginBottom: 10\n    }\n  },\n  card: {\n    display: \"flex\",\n    maxWidth: 550\n  },\n  logo: {\n    minWidth: 50,\n    height: 50,\n    borderRadius: 2,\n    margin: 10\n  },\n  info: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    margin: \"8px 15px 15px 15px\"\n  },\n  link: {\n    color: \"inherit\"\n  }\n};\n\nclass Education extends React.Component {\n  renderEducation = ({ src, href, university, degree, time }) => {\n    const { classes } = this.props;\n    return (\n      <Card variant='outlined' className={classes.card}>\n        <img className={classes.logo} src={src} alt={university} />\n        <div className={classes.info}>\n          <div>\n            <a\n              href={href}\n              target='_blank'\n              rel='noopener noreferrer'\n              className={classes.link}\n            >\n              <strong>{university}</strong>\n            </a>\n          </div>\n          <div>{degree}</div>\n          <div>{time}</div>\n        </div>\n      </Card>\n    );\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n        <h2>Education</h2>\n        <div className={classes.education}>\n          {this.renderEducation({\n            src: `${process.env.PUBLIC_URL}/images/Carleton.png`,\n            href: \"http://www.carleton.ca\",\n            university: \"Carleton University\",\n            degree: \"Master of Computer Science\",\n            time: \"September 2018 - December 2020\"\n          })}\n          {this.renderEducation({\n            src: `${process.env.PUBLIC_URL}/images/SUSS.png`,\n            href: \"http://www.suss.edu.sg\",\n            university: \"Singapore University of Social Sciences\",\n            degree: \"Bachelor of Science in Mathematics\",\n            time: \"July 2014 - November 2017\"\n          })}\n          {this.renderEducation({\n            src: `${process.env.PUBLIC_URL}/images/NTU.png`,\n            href: \"http://www.ntu.edu.sg\",\n            university: \"Nanyang Technological University\",\n            degree: \"Bachelor of Arts (Honours) in Psychology\",\n            time: \"August 2006 - May 2010\"\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(Education);\n","import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = {\n  experience: {\n    \"& > *\": {\n      marginBottom: 10\n    }\n  },\n  card: {\n    display: \"flex\",\n    maxWidth: 550\n  },\n  logo: {\n    minWidth: 50,\n    height: 50,\n    borderRadius: 2,\n    margin: 10\n  },\n  info: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    margin: \"8px 15px 15px 15px\"\n  },\n  link: {\n    color: \"inherit\"\n  }\n};\n\nclass Experience extends React.Component {\n  renderExperience = ({ src, href, company, title, time }) => {\n    const { classes } = this.props;\n    return (\n      <Card variant='outlined' className={classes.card}>\n        <img className={classes.logo} src={src} alt={company} />\n        <div className={classes.info}>\n          <div>\n            <a\n              href={href}\n              target='_blank'\n              rel='noopener noreferrer'\n              className={classes.link}\n            >\n              <strong>{company}</strong>\n            </a>\n          </div>\n          <div>{title}</div>\n          <div>{time}</div>\n        </div>\n      </Card>\n    );\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n        <h2>Experience</h2>\n        <div className={classes.experience}>\n          {this.renderExperience({\n            src: `${process.env.PUBLIC_URL}/images/Amazon.png`,\n            href: \"https://www.amazon.ca\",\n            company: \"Amazon\",\n            title: \"Software Development Engineer I\",\n            time: \"Since March 2021\"\n          })}\n          {this.renderExperience({\n            src: `${process.env.PUBLIC_URL}/images/Amazon.png`,\n            href: \"https://www.amazon.ca\",\n            company: \"Amazon\",\n            title: \"Software Development Engineer Intern\",\n            time: \"June 2020 - August 2020, September 2019 - December 2019\"\n          })}\n          {this.renderExperience({\n            src: `${process.env.PUBLIC_URL}/images/TutorOcean.png`,\n            href: \"https://www.tutorocean.com\",\n            company: \"TutorOcean\",\n            title: \"Software Engineer (Co-op)\",\n            time: \"May 2019 - August 2019\"\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(Experience);\n","import React from \"react\";\nimport GitHub from \"@material-ui/icons/GitHub\";\nimport LinkedIn from \"@material-ui/icons/LinkedIn\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = {\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  picture: {\n    width: 150,\n    height: 150,\n    borderRadius: \"50%\",\n    marginRight: 40\n  },\n  content: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    minHeight: 140,\n    marginTop: 10\n  },\n  name: {\n    marginTop: 0,\n    marginBottom: 10\n  },\n  links: {\n    display: \"flex\",\n    marginTop: 20\n  },\n  link: {\n    marginRight: 10,\n    color: \"inherit\"\n  }\n};\n\nclass Intro extends React.Component {\n  renderIcon = ({ href, icon }) => {\n    const { classes } = this.props;\n    return (\n      <a\n        href={href}\n        target='_blank'\n        rel='noopener noreferrer'\n        className={classes.link}\n      >\n        {icon}\n      </a>\n    );\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.root}>\n        <img\n          className={classes.picture}\n          src={`${process.env.PUBLIC_URL}/images/profile-picture.jpg`}\n          alt='Profile'\n        />\n        <div className={classes.content}>\n          <h2 className={classes.name}>Tom Nguyen</h2>\n          <div>Web developer</div>\n          <div>Based in Vancouver, Canada</div>\n          <div className={classes.links}>\n            {this.renderIcon({\n              href: \"https://github.com/arosisi\",\n              icon: <GitHub fontSize='small' />\n            })}\n            {this.renderIcon({\n              href: \"https://www.linkedin.com/in/tom-nguyen-76a84922\",\n              icon: <LinkedIn />\n            })}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(Intro);\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = {\n  category: {\n    marginBottom: 5\n  }\n};\n\nclass Skills extends React.Component {\n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n        <h2>Skills</h2>\n        <h4 className={classes.category}>Languages & Frameworks</h4>\n        JavaScript, Java, React, Angular, Node.js, Express.js\n        <h4 className={classes.category}>Databases</h4>\n        MongoDB, PostgreSQL\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(Skills);\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport Education from \"./Education\";\nimport Experience from \"./Experience\";\nimport Intro from \"./Intro\";\nimport Skills from \"./Skills\";\n\nconst styles = {\n  root: {\n    \"& > *\": {\n      marginBottom: 50\n    }\n  }\n};\n\nclass About extends React.Component {\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.root}>\n        <Helmet>\n          <title>Portfolio</title>\n          <meta name='description' content=\"arosisi (Tom Nguyen)'s portfolio\" />\n        </Helmet>\n\n        <Intro />\n        <Skills />\n        <Experience />\n        <Education />\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(About);\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport Button from \"@material-ui/core/Button\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { ReCaptcha, loadReCaptcha } from \"react-recaptcha-google\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport privateInfo from \"../privateInfo\";\n\nconst styles = {\n  root: {\n    maxWidth: 350\n  },\n  inputs: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    \"& > *\": {\n      marginBottom: 20\n    }\n  },\n  captchaError: {\n    color: \"#f44336\",\n    fontSize: 12\n  },\n  submit: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"end\"\n  },\n  submitError: {\n    color: \"#f44336\"\n  }\n};\n\nclass Contact extends React.Component {\n  state = {\n    captchaLoaded: false,\n    captchaVerified: false,\n    nameError: false,\n    emailError: false,\n    messageError: false,\n    captchaError: false,\n    submitting: false,\n    status: \"\"\n  };\n\n  componentDidMount() {\n    loadReCaptcha();\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const { captchaLoaded, captchaVerified } = this.state;\n    let captchaError = !captchaLoaded || !captchaVerified;\n\n    const form = event.target;\n    const data = new FormData(form);\n    const name = data.get(\"name\");\n    const email = data.get(\"email\");\n    const message = data.get(\"message\");\n    let nameError = !name;\n    let emailError = !/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(email);\n    let messageError = !message;\n\n    if (nameError || emailError || messageError || captchaError) {\n      this.setState({ nameError, emailError, messageError, captchaError });\n    } else {\n      this.setState({ submitting: true }, () => {\n        const xhr = new XMLHttpRequest();\n        xhr.open(form.method, form.action);\n        xhr.setRequestHeader(\"Accept\", \"application/json\");\n        xhr.onreadystatechange = () => {\n          if (xhr.readyState !== XMLHttpRequest.DONE) return;\n          if (xhr.status === 200) {\n            form.reset();\n            this.captcha.reset();\n            this.setState({ submitting: false, status: \"SUCCESS\" });\n          } else {\n            this.setState({ submitting: false, status: \"ERROR\" });\n          }\n        };\n        xhr.send(data);\n      });\n    }\n  };\n\n  render() {\n    const { classes } = this.props;\n    const {\n      nameError,\n      emailError,\n      messageError,\n      captchaError,\n      submitting,\n      status\n    } = this.state;\n    return (\n      <div className={classes.root}>\n        <Helmet>\n          <title>Contact</title>\n          <meta name='description' content='Contact arosisi (Tom Nguyen)' />\n        </Helmet>\n\n        <form\n          noValidate\n          autoComplete='off'\n          onSubmit={this.handleSubmit}\n          action={privateInfo.form_endpoint}\n          method='POST'\n        >\n          <div className={classes.inputs}>\n            <TextField\n              fullWidth\n              InputLabelProps={{\n                shrink: true\n              }}\n              name='name'\n              label='Name'\n              autoFocus\n              error={nameError}\n              helperText={nameError ? \"Name cannot be blank\" : \"\"}\n              onChange={() => this.setState({ nameError: false, status: \"\" })}\n            />\n            <TextField\n              fullWidth\n              InputLabelProps={{\n                shrink: true\n              }}\n              name='email'\n              label='Email'\n              error={emailError}\n              helperText={emailError ? \"Invalid email format\" : \"\"}\n              onChange={() => this.setState({ emailError: false, status: \"\" })}\n            />\n            <TextField\n              fullWidth\n              multiline\n              rows={4}\n              InputLabelProps={{\n                shrink: true\n              }}\n              name='message'\n              label='Message'\n              error={messageError}\n              helperText={messageError ? \"Message cannot be blank\" : \"\"}\n              onChange={() =>\n                this.setState({ messageError: false, status: \"\" })\n              }\n            />\n          </div>\n\n          <ReCaptcha\n            ref={element => {\n              this.captcha = element;\n            }}\n            render='explicit'\n            sitekey={privateInfo.captcha_sitekey}\n            onloadCallback={() => this.setState({ captchaLoaded: true })}\n            verifyCallback={() =>\n              this.setState({ captchaVerified: true, captchaError: false })\n            }\n            expiredCallback={() => this.setState({ captchaVerified: false })}\n          />\n          {captchaError && (\n            <div className={classes.captchaError}>Captcha is required</div>\n          )}\n\n          <br />\n\n          <div className={classes.submit}>\n            {status === \"SUCCESS\" ? (\n              <p>Submitted!</p>\n            ) : submitting ? (\n              <CircularProgress />\n            ) : (\n              <Button type='submit'>Submit</Button>\n            )}\n            {status === \"ERROR\" && (\n              <p className={classes.submitError}>Ooops! There was an error.</p>\n            )}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(Contact);\n","import React from \"react\";\nimport { withRouter } from \"react-router\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = {\n  appBar: {\n    boxShadow: \"none\"\n  },\n  tabs: {\n    margin: \"0 auto\"\n  }\n};\n\nclass NarBar extends React.Component {\n  render() {\n    const { classes, history } = this.props;\n    const page = history.location.pathname.slice(1);\n    return (\n      <AppBar\n        className={classes.appBar}\n        color='transparent'\n        position='relative'\n      >\n        <Toolbar>\n          <Tabs\n            className={classes.tabs}\n            value={page}\n            onChange={(event, page) => {\n              history.push(`${page}`);\n            }}\n          >\n            <Tab label='About' value='' />\n            <Tab label='Projects' value='projects' />\n            <Tab label='Contact' value='contact' />\n          </Tabs>\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\nexport default withRouter(withStyles(styles)(NarBar));\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = {\n  container: {\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  link: {\n    textDecoration: \"none\"\n  },\n  card: {\n    maxWidth: 345\n  },\n  content: {\n    fontFamily:\n      \"-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\",\n    fontSize: 16\n  },\n  title: {\n    fontWeight: \"bold\",\n    marginBottom: 10\n  }\n};\n\nclass Projects extends React.Component {\n  renderProject = ({ href, src, project, description }) => {\n    const { classes } = this.props;\n    return (\n      <Grid item xs={12} className={classes.container}>\n        <a\n          href={href}\n          target='_blank'\n          rel='noopener noreferrer'\n          className={classes.link}\n        >\n          <Card className={classes.card}>\n            <CardActionArea>\n              <CardMedia component='img' image={src} alt={project} />\n              <CardContent className={classes.content}>\n                <div className={classes.title}>{project}</div>\n                <div>{description}</div>\n              </CardContent>\n            </CardActionArea>\n          </Card>\n        </a>\n      </Grid>\n    );\n  };\n\n  render() {\n    return (\n      <div>\n        <Helmet>\n          <title>Projects</title>\n          <meta name='description' content=\"arosisi (Tom Nguyen)'s projects\" />\n        </Helmet>\n\n        <Grid container spacing={3}>\n          {this.renderProject({\n            href: \"https://arosisi.github.io/tower-of-hanoi\",\n            src: `${process.env.PUBLIC_URL}/images/tower-of-hanoi.jpg`,\n            project: \"Tower of Hanoi\",\n            description:\n              \"A game where the player has to move a stack of disks from one column to another\"\n          })}\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(Projects);\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport About from \"./components/About\";\nimport Contact from \"./components/Contact\";\nimport NavBar from \"./components/NavBar\";\nimport Projects from \"./components/Projects\";\n\nconst styles = {\n  content: {\n    marginTop: 50,\n    padding: \"0 40px\",\n    display: \"flex\",\n    justifyContent: \"center\"\n  }\n};\n\nclass App extends React.Component {\n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n        <NavBar />\n        <div className={classes.content}>\n          <Switch>\n            <Route exact path='/' component={About} />\n            <Route path='/projects' component={Projects} />\n            <Route path='/contact' component={Contact} />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","import React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from \"./App\";\n\nclass AppRouter extends React.Component {\n  render() {\n    return (\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <App />\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default AppRouter;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport AppRouter from \"./AppRouter\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<AppRouter />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}